"""add tables

Revision ID: 81bf6867e90c
Revises: 
Create Date: 2024-09-02 14:55:48.347104

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from models.roles import Roles
from models.job import Job
from models.department import Department
from utils.enum import RolesStatus
from datetime import datetime


# revision identifiers, used by Alembic.
revision: str = '81bf6867e90c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('barcodes',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('barcode', sa.String(), nullable=False),
                    sa.Column('code', sa.String(), nullable=False),
                    sa.Column('specification', sa.String(), nullable=False),
                    sa.Column('location', sa.String(), nullable=False),
                    sa.Column('category', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_barcode_barcode'),
                    'barcodes', ['barcode'], unique=True)
    op.create_index(op.f('ix_barcode_code'),
                    'barcodes', ['code'], unique=False)
    op.create_index(op.f('ix_barcode_id'), 'barcodes', ['id'], unique=True)
    op.create_table('costs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('cost', sa.Float(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('cost')
                    )
    op.create_index(op.f('ix_costs_id'), 'costs', ['id'], unique=True)
    op.create_table('departments',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_index(op.f('ix_department_id'),
                    'departments', ['id'], unique=True)
    op.create_table('emails',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_emails_email'), 'emails', ['email'], unique=True)
    op.create_index(op.f('ix_emails_id'), 'emails', ['id'], unique=True)
    op.create_table('jobs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_index(op.f('ix_job_id'), 'jobs', ['id'], unique=True)
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Enum(
                        'engineer', 'stock_controller', name='rolesstatus'), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('cost_evaluation',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('barcode_id', sa.Integer(), nullable=True),
                    sa.Column('quantity', sa.Integer(), nullable=True),
                    sa.Column('cost', sa.Float(), nullable=True),
                    sa.Column('total', sa.Float(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['barcode_id'], ['barcodes.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_cost_evaluation_id'),
                    'cost_evaluation', ['id'], unique=True)
    op.create_table('staffs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('staff_id_number', sa.String(), nullable=False),
                    sa.Column('job_id', sa.Integer(), nullable=False),
                    sa.Column('department_id', sa.Integer(), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.Column('hash_password', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['department_id'], ['departments.id'], ),
                    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_staff_id'), 'staffs', ['id'], unique=True)
    op.create_index(op.f('ix_staff_staff_id_number'),
                    'staffs', ['staff_id_number'], unique=True)
    op.create_table('stock_runnings',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('barcode_id', sa.Integer(), nullable=False),
                    sa.Column('stock_quantity', sa.Integer(), nullable=False),
                    sa.Column('out_quantity', sa.Integer(), nullable=False),
                    sa.Column('adjustment_quantity',
                              sa.Integer(), nullable=False),
                    sa.Column('remaining_quantity',
                              sa.Integer(), nullable=False),
                    sa.Column('status', sa.Enum('available', 're_order',
                                                name='runningstockstatus'), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['barcode_id'], ['barcodes.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_stock_running_id'),
                    'stock_runnings', ['id'], unique=True)
    op.create_table('orders',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('staff_id', sa.Integer(), nullable=True),
                    sa.Column('barcode_id', sa.Integer(), nullable=False),
                    sa.Column('part_name', sa.String(), nullable=True),
                    sa.Column('job_number', sa.String(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=True),
                    sa.Column('available_quantity',
                              sa.Integer(), nullable=True),
                    sa.Column('restrictions', sa.Enum('part_not_available',
                                                      'part_available', name='orderstatus'), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['barcode_id'], ['barcodes.id'], ),
                    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=True)
    op.create_table('stocks',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('barcode_id', sa.Integer(), nullable=False),
                    sa.Column('erm_code', sa.String(), nullable=True),
                    sa.Column('quantity', sa.Integer(), nullable=True),
                    sa.Column('sold', sa.Boolean(), nullable=True),
                    sa.Column('cost_id', sa.Integer(), nullable=False),
                    sa.Column('created_by', sa.Integer(), nullable=True),
                    sa.Column('updated_by', sa.Integer(), nullable=True),
                    sa.Column('sold_at', sa.DateTime(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['barcode_id'], ['barcodes.id'], ),
                    sa.ForeignKeyConstraint(['cost_id'], ['costs.id'], ),
                    sa.ForeignKeyConstraint(['created_by'], ['staffs.id'], ),
                    sa.ForeignKeyConstraint(['updated_by'], ['staffs.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_stock_id'), 'stocks', ['id'], unique=True)
    op.create_table('stock_adjustments',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('barcode_id', sa.Integer(), nullable=False),
                    sa.Column('department_id', sa.Integer(), nullable=True),
                    sa.Column('created_by', sa.Integer(), nullable=True),
                    sa.Column('updated_by', sa.Integer(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['barcode_id'], ['barcodes.id'], ),
                    sa.ForeignKeyConstraint(['created_by'], ['staffs.id'], ),
                    sa.ForeignKeyConstraint(
                        ['department_id'], ['departments.id'], ),
                    sa.ForeignKeyConstraint(['updated_by'], ['staffs.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_stock_adjustments_id'),
                    'stock_adjustments', ['id'], unique=True)
    op.create_table('stock_outs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('barcode_id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=True),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['barcode_id'], ['barcodes.id'], ),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_stock_out_id'), 'stock_outs', ['id'], unique=True)
    op.bulk_insert(
        Roles.__table__,
        rows=[
            {
                "id": 1,
                "name": RolesStatus.engineer.name,
                "created_at": datetime.now()
            },
            {
                "id": 2,
                "name": RolesStatus.stock_controller.name,
                "created_at": datetime.now()
            }
        ]
    )
    op.bulk_insert(
        Department.__table__,
        rows=[
            {
                "id": 1,
                "name": "Admin Department",
                "created_at": datetime.now()
            },
        ]
    )
    op.bulk_insert(
        Job.__table__,
        rows=[
            {
                "id": 1,
                "name": "Admin Controller",
                "created_at": datetime.now()
            },
        ]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stock_out_id'), table_name='stock_outs')
    op.drop_table('stock_outs')
    op.drop_index(op.f('ix_stock_adjustments_id'),
                  table_name='stock_adjustments')
    op.drop_table('stock_adjustments')
    op.drop_index(op.f('ix_stock_id'), table_name='stocks')
    op.drop_table('stocks')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_stock_running_id'), table_name='stock_runnings')
    op.drop_table('stock_runnings')
    op.drop_index(op.f('ix_staff_staff_id_number'), table_name='staffs')
    op.drop_index(op.f('ix_staff_id'), table_name='staffs')
    op.drop_table('staffs')
    op.drop_index(op.f('ix_cost_evaluation_id'), table_name='cost_evaluation')
    op.drop_table('cost_evaluation')
    op.drop_table('roles')
    op.drop_index(op.f('ix_job_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_emails_id'), table_name='emails')
    op.drop_index(op.f('ix_emails_email'), table_name='emails')
    op.drop_table('emails')
    op.drop_index(op.f('ix_department_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_costs_id'), table_name='costs')
    op.drop_table('costs')
    op.drop_index(op.f('ix_barcode_id'), table_name='barcodes')
    op.drop_index(op.f('ix_barcode_code'), table_name='barcodes')
    op.drop_index(op.f('ix_barcode_barcode'), table_name='barcodes')
    op.drop_table('barcodes')
    # ### end Alembic commands ###
